swagger: "2.0"
info:
  description: ""
  version: "1.0.0"
  title: "Swagger Bookstore"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "apiteam@swagger.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "bookstore.swagger.io"
basePath: "/v2"
tags:
- name: "Books"
  description: ""
  externalDocs:
    description: "Find out more"
    url: "http://swagger.io"
- name: "Authors"
  description: ""
- name: "Publishers"
  description: ""
  externalDocs:
    description: "Find out more about our store"
    url: "http://swagger.io"
schemes:
- "https"
- "http"


paths:
  /books:
    post:
      tags:
      - "Books"
      summary: "Add a new book to the store"
      description: ""
      operationId: "addBook"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Book object that needs to be added to the store"
        required: true
        schema:
          $ref: "#/definitions/Book"
      responses:
        "405":
          description: "Invalid input"
          
  /books/{bookId}:        
    get:
      tags:
      - "Books"
      summary: "Find book by ID"
      description: "Returns a single book"
      operationId: "getBookById"
      produces:
      - "application/json"
      parameters:
      - name: "bookId"
        in: "path"
        description: "ID of book to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Book"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Book not found"
          
    
    delete:
      tags:
      - "Books"
      summary: "Deletes a book"
      description: ""
      operationId: "deleteBook"
      produces:
      - "application/json"
      parameters:
      - name: "api_key"
        in: "header"
        required: false
        type: "string"
      - name: "bookId"
        in: "path"
        description: "Book id to delete"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Book not found"
    
      
    put:
      tags:
      - "Books"
      summary: "Updates a book in the store with form data"
      description: ""
      operationId: "updateBookWithForm"
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      parameters:
      - name: "bookId"
        in: "path"
        description: "ID of book that needs to be updated"
        required: true
        type: "integer"
        format: "int64"
      - name: "price"
        in: "formData"
        description: "Updated price of the book"
        required: false
        type: "number"
      - name: "name"
        in: "formData"
        description: "Updated name of the book"
        required: false
        type: "string"
      - name: "numOfPages"
        in: "formData"
        description: "Updated numOfPages of the book"
        required: false
        type: "integer"
        format: "int64"
      - name: "productionYear"
        in: "formData"
        description: "Updated productionYear of the book"
        required: false
        type: "integer"
        format: "int64"
      - name: "publisher"
        in: "formData"
        description: "Updated publisher of the book"
        required: false
        type: "string"
        format: "#/definitions/Publisher"
      - name: "listOfAuthors"
        in: "formData"
        description: "Updated listOfAuthors of the book"
        required: false
        type: "string"
      responses:
        "405":
          description: "Invalid input"

  
  /authors:
    post:
      tags:
      - "Authors"
      summary: "Add a new author the store"
      description: ""
      operationId: "addAuthor"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Author object that needs to be added to the store"
        required: true
        schema:
          $ref: "#/definitions/Author"
      responses:
        "405":
          description: "Invalid input"
          
  /authors/authorID}:        
    get:
      tags:
      - "Authors"
      summary: "Find Author by ID"
      description: "Returns a single author"
      operationId: "getAuthorById"
      produces:
      - "application/json"
      parameters:
      - name: "authorId"
        in: "path"
        description: "ID of author to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Author"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Author not found"
          
    
    delete:
      tags:
      - "Authors"
      summary: "Deletes an author"
      description: ""
      operationId: "deleteAuthor"
      produces:
      - "application/json"
      parameters:
      - name: "api_key"
        in: "header"
        required: false
        type: "string"
      - name: "authorId"
        in: "path"
        description: "Author id to delete"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Author not found"
    
      
    put:
      tags:
      - "Authors"
      summary: "Updates an author in the store with form data"
      description: ""
      operationId: "updateAuthorWithForm"
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      parameters:
      - name: "authorId"
        in: "path"
        description: "ID of author that needs to be updated"
        required: true
        type: "integer"
        format: "int64"
      - name: "surname"
        in: "formData"
        description: "Updated surname of the author"
        required: false
        type: "string"
        format: "byte"
      - name: "name"
        in: "formData"
        description: "Updated name of the author"
        required: false
        type: "string"
      - name: "middlename"
        in: "formData"
        description: "Updated middlename of the author"
        required: false
        type: "string"
        format: "byte"
      - name: "dateOfBirth"
        in: "formData"
        description: "Updated dateOfBirth of the author"
        required: false
        type: "string"
        format: "date"
      - name: "authorBooks"
        in: "formData"
        description: "Updated authorBooks of the author"
        required: false
        type: "string"
        format: "#/definitions/Book"
      responses:
        "405":
          description: "Invalid input"  
  
  
  /publishers:
    post:
      tags:
      - "Publishers"
      summary: "Add a new publisher the store"
      description: ""
      operationId: "addPublisher"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Publisher object that needs to be added to the store"
        required: true
        schema:
          $ref: "#/definitions/Publisher"
      responses:
        "405":
          description: "Invalid input"
          
  /publishers/{publisherID}:        
    get:
      tags:
      - "Publishers"
      summary: "Find Publisher by ID"
      description: "Returns a single publisher"
      operationId: "getPublisherById"
      produces:
      - "application/json"
      parameters:
      - name: "publisherId"
        in: "path"
        description: "ID of publisher to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Publisher"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Publisher not found"
          
    
    delete:
      tags:
      - "Publishers"
      summary: "Deletes a publisher"
      description: ""
      operationId: "deletePublisher"
      produces:
      - "application/json"
      parameters:
      - name: "api_key"
        in: "header"
        required: false
        type: "string"
      - name: "publisherId"
        in: "path"
        description: "Publisher id to delete"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Publisher not found"
    
      
    put:
      tags:
      - "Publishers"
      summary: "Updates a publisher in the store with form data"
      description: ""
      operationId: "updatePublisherWithForm"
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      parameters:
      - name: "publisherId"
        in: "path"
        description: "ID of publisher that needs to be updated"
        required: true
        type: "integer"
        format: "int64"
      - name: "name"
        in: "formData"
        description: "Updated name of the publisher"
        required: false
        type: "string"
      - name: "publishedBooks"
        in: "formData"
        description: "Updated publishedBooks of the Publisher"
        required: false
        type: "string"
        format: "#/definitions/Book"
      responses:
        "405":
          description: "Invalid input"  
     
  


definitions:

  Book:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      price:
        type: "number"
        format: "double"
      authorList:
        type: "array"
        items:
          $ref: "#/definitions/Author"
      publisher:
          $ref: "#/definitions/Publisher"
      name:
        type: "string"
        format: "byte"
      numOfPages:
        type: "integer"
        default: "int64"
      productionYear:
        type: "integer"
        default: "int64"
    
  Author:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      surname:
        type: "string"
        format: "byte"
      name:
        type: "string"
        format: "byte"
      middlename:
        type: "string"
        format: "name"
      dateOfBirth:
        type: "string"
        format: "date"
      listOfBooks:
        type: "array"
        items:
          $ref: "#/definitions/Book"
      
  Publisher:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
        format: "byte"
      publishedBooks:
        type: "array"
        items:
          $ref: "#/definitions/Book"
    
      
     
     
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"